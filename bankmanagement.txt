package Mini_Banking;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class bankmanagement {

    static Connection con = BankingDatabase.getConnection(); // Establish database connection

    // Deposit Money Method
    public static boolean depositMoney(String name, double amount) {
        if (name == null || name.isEmpty() || amount <= 0) {
            System.out.println("ERR : Invalid Input. Deposit Failed!");
            return false;
        }
        String sql = "UPDATE customer SET balance = balance + ? WHERE cname = ?";
        try (PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setDouble(1, amount);
            stmt.setString(2, name);
            int rows = stmt.executeUpdate();
            return rows > 0; // Return true if the operation was successful
        } catch (SQLException e) {
            System.out.println("Error Depositing Money: " + e.getMessage());
        }
        return false;
    }

    // Check Balance Method
    public static void checkBalance(String name) {
        if (name == null || name.isEmpty()) {
            System.out.println("ERR : Invalid Input. Check Balance Failed!");
            return;
        }
        String sql = "SELECT balance FROM customer WHERE cname = ?";
        try (PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setString(1, name);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                System.out.println(name + "'s Current Balance: â‚¹" + rs.getDouble("balance"));
            } else {
                System.out.println("Account Not Found.");
            }
        } catch (SQLException e) {
            System.out.println("Error Checking Balance: " + e.getMessage());
        }
    }

    // Withdraw Money Method
    public static boolean withdrawMoney(String name, double amount) {
        if (name == null || name.isEmpty() || amount <= 0) {
            System.out.println("ERR : Invalid Input. Withdrawal Failed!");
            return false;
        }
        String sql = "UPDATE customer SET balance = balance - ? WHERE cname = ? AND balance >= ?";
        try (PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setDouble(1, amount);
            stmt.setString(2, name);
            stmt.setDouble(3, amount);
            int rows = stmt.executeUpdate();
            if (rows > 0) {
                return true; // Successful withdrawal
            } else {
                System.out.println("ERR : Insufficient Balance or Account Not Found!");
            }
        } catch (SQLException e) {
            System.out.println("Error Withdrawing Money: " + e.getMessage());
        }
        return false;
    }

    // Create Account Method
    public static boolean createAccount(String name, int passCode) {
        if (name == null || name.isEmpty() || passCode <= 0) {
            System.out.println("All Fields Required!");
            return false;
        }
        String sql = "INSERT INTO customer (cname, balance, pass_code) VALUES (?, ?, ?)";
        try (PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setDouble(2, 1000.00); // Default balance
            stmt.setInt(3, passCode);
            int rows = stmt.executeUpdate();
            return rows > 0;
        } catch (SQLException e) {
            System.out.println("Error Creating Account: " + e.getMessage());
        }
        return false;
    }

    // Login Account Method
    public static boolean loginAccount(String name, int passCode) {
        if (name == null || name.isEmpty() || passCode <= 0) {
            System.out.println("All Fields Required!");
            return false;
        }
        String sql = "SELECT ac_no FROM customer WHERE cname = ? AND pass_code = ?";
        try (PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setInt(2, passCode);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                System.out.println("Login Successful! Welcome, " + name);
                return true;
            }
        } catch (SQLException e) {
            System.out.println("Login Error: " + e.getMessage());
        }
        return false;
    }
}
